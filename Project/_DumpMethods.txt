//%attributes = {"lang":"en","shared":true} comment added and reserved by 4D.//Project Method: _DumpMethods////   Parameter        Type             Description////Description: Exports all methods to files.  Include all methods in Forms.//   ////Date        Init  Description//===============================================================================//02/12/2015   CA   Initial version.C_TEXT($vT_BaseDir;$vT_Filename;$vT_GroupDir;$vT_MethodText;$vT_ObjectName;$vT_Str;$vT_FormObjectName)C_POINTER($vP_Table)C_LONGINT($vL_MethodType;$ii)C_BOOLEAN($vB_Continue)C_TIME($vH_Doc)ARRAY TEXT($aT_MethodPaths;0)METHOD GET PATHS(Path all objects;$aT_MethodPaths)SORT ARRAY($aT_MethodPaths;>)$vT_BaseDir:=System folder(Desktop)+"GenieCode"+Folder separator+"trainingDB"+Folder separatorIf (Test path name($vT_BaseDir)=Is a folder)MCSU_FILE_DeleteFolderContents ($vT_BaseDir)$vH_Doc:=MCSU_WRAP_Create_document ($vT_BaseDir+"Log.csv")If (OK=1)CLOSE DOCUMENT($vH_Doc)MCSU_FILE_TextToFile ("Group"+<>TB+"Table"+<>TB+"Form"+<>TB+"Object"+<>LF;$vT_BaseDir+"Log.csv")For ($ii;1;Size of array($aT_MethodPaths))METHOD RESOLVE PATH($aT_MethodPaths{$ii};$vL_MethodType;$vP_Table;$vT_ObjectName;$vT_FormObjectName)METHOD GET CODE($aT_MethodPaths{$ii};$vT_MethodText)$vB_Continue:=True$vT_Filename:=""Case of : ($vL_MethodType=1)$vT_GroupDir:="Project": ($vL_MethodType=2)$vT_GroupDir:="Database": ($vL_MethodType=4)$vT_GroupDir:="Form": ($vL_MethodType=8)$vT_GroupDir:="Trigger": ($vL_MethodType=16)$vT_GroupDir:="Form"End case $vT_Str:=$vT_Str+$vT_GroupDirIf (Nil($vP_Table))$vT_Str:=$vT_Str+<>TB+"NoTable"Else $vT_Str:=$vT_Str+<>TB+Table name($vP_Table)End if $vT_Str:=$vT_Str+<>TB+$vT_ObjectName+<>TB+$vT_FormObjectName+<>LF// Create the high level folder.If (Test path name($vT_BaseDir+$vT_GroupDir)#Is a folder)CREATE FOLDER($vT_BaseDir+$vT_GroupDir)$vB_Continue:=(OK=1)End if // Create any intermediate folders.If ($vB_Continue)$vT_Filename:=$vT_BaseDir+$vT_GroupDir+Folder separatorCase of // These ones have unique names.: (($vT_GroupDir="Database") | ($vT_GroupDir="Project"))$vT_Filename:=$vT_Filename+$vT_ObjectName+".txt"// Trigger methods can be called by their table name.: ($vT_GroupDir="Trigger")If (Not(Nil($vP_Table)))$vT_Filename:=$vT_Filename+Table name($vP_Table)+".txt"End if Else // Forms!  Need to create [Table] subfolder.If (Not(Nil($vP_Table)))$vT_Filename:=$vT_Filename+Table name($vP_Table)+Folder separatorElse $vT_Filename:=$vT_Filename+"_Project"+Folder separatorEnd if If (Test path name($vT_Filename)#Is a folder)CREATE FOLDER($vT_Filename)$vB_Continue:=(OK=1)End if // Forms!  Need to create [Form] subfolder.If ($vB_Continue)$vT_Filename:=$vT_Filename+$vT_ObjectName+Folder separatorIf (Test path name($vT_Filename)#Is a folder)CREATE FOLDER($vT_Filename)$vB_Continue:=(OK=1)End if End if // Now create the method file.  It might be at the form level...If ($vB_Continue)If (Length($vT_FormObjectName)>0)$vT_Filename:=$vT_Filename+$vT_FormObjectName+".txt"Else $vT_Filename:=$vT_Filename+$vT_ObjectName+".txt"End if End if End case End if If ($vB_Continue)If (Position(".txt";$vT_Filename)>0)MCSU_FILE_TextToFile ($vT_MethodText;$vT_Filename)End if End if // test.End for MCSU_FILE_TextToFile ($vT_Str;$vT_BaseDir+"Log.csv")Else MCSU_WRAP_ALERT ("Cannot create Log file.")End if Else MCSU_WRAP_ALERT ("Please create "+$vT_BaseDir)End if 